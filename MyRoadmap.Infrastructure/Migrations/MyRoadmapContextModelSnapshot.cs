// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyRoadmap.Infrastructure;

#nullable disable

namespace MyRoadmap.Infrastructure.Migrations
{
    [DbContext(typeof(MyRoadmapContext))]
    partial class MyRoadmapContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("MyRoadmap.Domain.Entities.Roadmap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Roadmaps");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.RoadmapItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastRequiredItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LastRequiredItemId");

                    b.ToTable("RoadmapItems");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.Topic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RoadmapId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TopicOfInterestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoadmapId");

                    b.HasIndex("TopicOfInterestId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.RoadmapItem", b =>
                {
                    b.HasOne("MyRoadmap.Domain.Entities.Roadmap", "LastRequiredItem")
                        .WithMany("RoadmapItem")
                        .HasForeignKey("LastRequiredItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LastRequiredItem");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.User", b =>
                {
                    b.HasOne("MyRoadmap.Domain.Entities.Roadmap", "Roadmap")
                        .WithMany()
                        .HasForeignKey("RoadmapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyRoadmap.Domain.Entities.Topic", "TopicOfInterest")
                        .WithMany()
                        .HasForeignKey("TopicOfInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roadmap");

                    b.Navigation("TopicOfInterest");
                });

            modelBuilder.Entity("MyRoadmap.Domain.Entities.Roadmap", b =>
                {
                    b.Navigation("RoadmapItem");
                });
#pragma warning restore 612, 618
        }
    }
}
